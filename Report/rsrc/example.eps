%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8.1 Pro.
%%Title: D:\Dropbox\Cranfield\Subjects\Computational methods\Domi\assignment\first\error.eps
%%CreationDate: 11/28/2014  17:51:08
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
88 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 656 3366 mt  656 3326 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 623 3511 mt 
(1) s
1959 3366 mt 1959 3326 L
1876 3511 mt 
(1.5) s
3262 3366 mt 3262 3326 L
3229 3511 mt 
(2) s
4566 3366 mt 4566 3326 L
4483 3511 mt 
(2.5) s
 656 3366 mt  695 3366 L
 555 3410 mt 
(0) s
 656 2980 mt  695 2980 L
 455 3024 mt 
(0.2) s
 656 2595 mt  695 2595 L
 455 2639 mt 
(0.4) s
 656 2210 mt  695 2210 L
 455 2254 mt 
(0.6) s
 656 1825 mt  695 1825 L
 455 1869 mt 
(0.8) s
 656 1439 mt  695 1439 L
 555 1483 mt 
(1) s
 656 1054 mt  695 1054 L
 455 1098 mt 
(1.2) s
 656  669 mt  695  669 L
 455  713 mt 
(1.4) s
 656  284 mt  695  284 L
 455  328 mt 
(1.6) s
gs 656 284 3911 3083 rc
24 w
261 -467 261 -404 260 -348 261 -299 261 -256 261 -219 260 -187 261 -158 
260 -133 261 -111 261 -93 260 -77 261 -63 261 -51 260 -41 656 3366 16 MP stroke
/c8 { 0.500000 0.900000 0.500000 sr} bdef
c8
131 -128 130 -119 130 -110 131 -102 130 -95 130 -89 131 -81 130 -76 
131 -70 130 -65 130 -59 131 -56 130 -50 130 -47 130 -43 131 -40 
130 -36 130 -34 131 -30 130 -28 131 -25 130 -23 130 -21 130 -19 
131 -18 130 -15 131 -14 130 -13 130 -11 130 -10 656 3366 31 MP stroke
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
66 -33 65 -32 65 -31 65 -30 65 -29 65 -28 66 -27 65 -26 
65 -25 65 -24 65 -23 65 -22 66 -21 65 -21 65 -20 65 -19 
65 -18 66 -18 65 -16 65 -17 65 -15 65 -15 65 -15 66 -14 
65 -13 65 -13 65 -12 65 -12 65 -11 65 -11 66 -10 65 -10 
65 -10 65 -9 65 -8 65 -9 66 -8 65 -7 65 -8 65 -6 
65 -7 66 -6 65 -6 65 -6 65 -6 65 -5 65 -5 65 -5 
66 -4 65 -4 65 -4 65 -4 65 -4 66 -3 65 -4 65 -3 
65 -3 65 -2 65 -3 65 -3 656 3366 61 MP stroke
/c10 { 0.000000 1.000000 1.000000 sr} bdef
c10
33 -9 33 -8 32 -8 33 -8 32 -8 33 -8 33 -8 32 -7 
33 -8 32 -7 33 -7 32 -7 33 -7 33 -7 32 -6 33 -7 
32 -6 33 -6 33 -6 32 -6 33 -6 32 -6 33 -6 32 -5 
33 -6 33 -5 32 -6 33 -5 32 -5 33 -5 33 -5 32 -4 
33 -5 32 -5 33 -4 33 -5 32 -4 33 -4 32 -4 33 -4 
32 -4 33 -4 33 -4 32 -4 33 -4 32 -3 33 -4 33 -3 
32 -4 33 -3 32 -3 33 -3 32 -3 33 -4 33 -3 32 -3 
33 -2 32 -3 33 -3 32 -3 33 -2 33 -3 32 -2 33 -3 
32 -2 33 -3 33 -2 32 -2 33 -3 32 -2 33 -2 32 -2 
33 -2 33 -2 32 -2 33 -2 32 -2 33 -2 33 -1 32 -2 
33 -2 32 -1 33 -2 33 -2 32 -1 33 -2 32 -1 33 -2 
32 -1 33 -1 33 -2 32 -1 33 -1 32 -1 33 -2 32 -1 
33 -1 33 -1 32 -1 33 -1 32 -1 33 -1 33 -1 32 -1 
33 -1 32 -1 33 -1 33 -1 32 -1 33 -1 32 0 33 -1 
32 -1 33 -1 33 0 32 -1 33 -1 32 0 33 -1 32 -1 
656 3366 121 MP stroke
6 w
c8
0 -2907 656 3366 2 MP stroke
c9
0 -2907 916 3366 2 MP stroke
c10
0 -2907 1177 3366 2 MP stroke
/c11 { 1.000000 0.000000 0.000000 sr} bdef
c11
0 -2907 1438 3366 2 MP stroke
/c12 { 1.000000 0.500000 1.000000 sr} bdef
c12
0 -2907 1698 3366 2 MP stroke
0 sg
0 -2907 1959 3366 2 MP stroke
c8
0 -2907 2220 3366 2 MP stroke
c9
0 -2907 2480 3366 2 MP stroke
c10
0 -2907 2741 3366 2 MP stroke
c11
0 -2907 3001 3366 2 MP stroke
c12
0 -2907 3262 3366 2 MP stroke
0 sg
0 -2907 3523 3366 2 MP stroke
c8
0 -2907 3784 3366 2 MP stroke
c9
0 -2907 4044 3366 2 MP stroke
c10
0 -2907 4305 3366 2 MP stroke
c11
0 -2907 4566 3366 2 MP stroke
gr

c11
0 sg
1045  189 mt 
(Error between the analytical and the Euler's approximation.) s
 373 2118 mt  -90 rotate
(Error value) s
90 rotate
2391 3654 mt 
(x values) s
 639 3409 mt 
( ) s
4550  326 mt 
( ) s
1 sg
0 714 1009 0 0 -714 661 990 4 MP
PP
-1009 0 0 714 1009 0 0 -714 661 990 5 MP stroke
4 w
DO
SO
6 w
0 sg
 661  276 mt 1670  276 L
 661  990 mt 1670  990 L
1670  990 mt 1670  276 L
 661  990 mt  661  276 L
 661  990 mt 1670  990 L
 661  990 mt  661  276 L
 661  276 mt 1670  276 L
 661  990 mt 1670  990 L
1670  990 mt 1670  276 L
 661  990 mt  661  276 L
1130  423 mt 
(h=0.1) s
gs 661 276 1010 715 rc
24 w
360 0 733 381 2 MP stroke
gr

24 w
1130  591 mt 
(h=0.05) s
gs 661 276 1010 715 rc
c8
360 0 733 548 2 MP stroke
gr

c8
0 sg
1130  760 mt 
(h=0.025) s
gs 661 276 1010 715 rc
c9
360 0 733 716 2 MP stroke
gr

c9
0 sg
1130  928 mt 
(h=0.0125) s
gs 661 276 1010 715 rc
c10
360 0 733 884 2 MP stroke
6 w
gr

6 w
c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
